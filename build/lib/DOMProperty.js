define("kg/react/0.0.2/lib/DOMProperty",["./invariant"],function(e,t,r){"use strict";function a(e,t){return(e&t)===t}var o=e("./invariant"),s={MUST_USE_ATTRIBUTE:1,MUST_USE_PROPERTY:2,HAS_SIDE_EFFECTS:4,HAS_BOOLEAN_VALUE:8,HAS_NUMERIC_VALUE:16,HAS_POSITIVE_NUMERIC_VALUE:48,HAS_OVERLOADED_BOOLEAN_VALUE:64,injectDOMPropertyConfig:function(e){var t=e.Properties||{},r=e.DOMAttributeNames||{},i=e.DOMPropertyNames||{},u=e.DOMMutationMethods||{};e.isCustomAttribute&&n._isCustomAttributeFunctions.push(e.isCustomAttribute);for(var c in t){"production"!==process.env.NODE_ENV?o(!n.isStandardName.hasOwnProperty(c),"injectDOMPropertyConfig(...): You're trying to inject DOM property '%s' which has already been injected. You may be accidentally injecting the same DOM property config twice, or you may be injecting two configs that have conflicting property names.",c):o(!n.isStandardName.hasOwnProperty(c)),n.isStandardName[c]=!0;var E=c.toLowerCase();if(n.getPossibleStandardName[E]=c,r.hasOwnProperty(c)){var l=r[c];n.getPossibleStandardName[l]=c,n.getAttributeName[c]=l}else n.getAttributeName[c]=E;n.getPropertyName[c]=i.hasOwnProperty(c)?i[c]:c,n.getMutationMethod[c]=u.hasOwnProperty(c)?u[c]:null;var m=t[c];n.mustUseAttribute[c]=a(m,s.MUST_USE_ATTRIBUTE),n.mustUseProperty[c]=a(m,s.MUST_USE_PROPERTY),n.hasSideEffects[c]=a(m,s.HAS_SIDE_EFFECTS),n.hasBooleanValue[c]=a(m,s.HAS_BOOLEAN_VALUE),n.hasNumericValue[c]=a(m,s.HAS_NUMERIC_VALUE),n.hasPositiveNumericValue[c]=a(m,s.HAS_POSITIVE_NUMERIC_VALUE),n.hasOverloadedBooleanValue[c]=a(m,s.HAS_OVERLOADED_BOOLEAN_VALUE),"production"!==process.env.NODE_ENV?o(!n.mustUseAttribute[c]||!n.mustUseProperty[c],"DOMProperty: Cannot require using both attribute and property: %s",c):o(!n.mustUseAttribute[c]||!n.mustUseProperty[c]),"production"!==process.env.NODE_ENV?o(n.mustUseProperty[c]||!n.hasSideEffects[c],"DOMProperty: Properties that have side effects must use property: %s",c):o(n.mustUseProperty[c]||!n.hasSideEffects[c]),"production"!==process.env.NODE_ENV?o(!!n.hasBooleanValue[c]+!!n.hasNumericValue[c]+!!n.hasOverloadedBooleanValue[c]<=1,"DOMProperty: Value can be one of boolean, overloaded boolean, or numeric value, but not a combination: %s",c):o(!!n.hasBooleanValue[c]+!!n.hasNumericValue[c]+!!n.hasOverloadedBooleanValue[c]<=1)}}},i={},n={ID_ATTRIBUTE_NAME:"data-reactid",isStandardName:{},getPossibleStandardName:{},getAttributeName:{},getPropertyName:{},getMutationMethod:{},mustUseAttribute:{},mustUseProperty:{},hasSideEffects:{},hasBooleanValue:{},hasNumericValue:{},hasPositiveNumericValue:{},hasOverloadedBooleanValue:{},_isCustomAttributeFunctions:[],isCustomAttribute:function(e){for(var t=0;t<n._isCustomAttributeFunctions.length;t++){var r=n._isCustomAttributeFunctions[t];if(r(e))return!0}return!1},getDefaultValueForProperty:function(e,t){var r,a=i[e];return a||(i[e]=a={}),t in a||(r=document.createElement(e),a[t]=r[t]),a[t]},injection:s};r.exports=n});