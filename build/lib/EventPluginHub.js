define("kg/react/0.0.2/lib/EventPluginHub",["./EventPluginRegistry","./EventPluginUtils","./accumulateInto","./forEachAccumulated","./invariant"],function(e,n,t){"use strict";function i(){var e=!f||!f.traverseTwoPhase||!f.traverseEnterLeave;if(e)throw new Error("InstanceHandle not injected before use!")}var r=e("./EventPluginRegistry"),u=e("./EventPluginUtils"),c=e("./accumulateInto"),o=e("./forEachAccumulated"),s=e("./invariant"),a={},l=null,v=function(e){if(e){var n=u.executeDispatch,t=r.getPluginModuleForEvent(e);t&&t.executeDispatch&&(n=t.executeDispatch),u.executeDispatchesInOrder(e,n),e.isPersistent()||e.constructor.release(e)}},f=null,p={injection:{injectMount:u.injection.injectMount,injectInstanceHandle:function(e){f=e,"production"!==process.env.NODE_ENV&&i()},getInstanceHandle:function(){return"production"!==process.env.NODE_ENV&&i(),f},injectEventPluginOrder:r.injectEventPluginOrder,injectEventPluginsByName:r.injectEventPluginsByName},eventNameDispatchConfigs:r.eventNameDispatchConfigs,registrationNameModules:r.registrationNameModules,putListener:function(e,n,t){"production"!==process.env.NODE_ENV?s(!t||"function"==typeof t,"Expected %s listener to be a function, instead got type %s",n,typeof t):s(!t||"function"==typeof t);var i=a[n]||(a[n]={});i[e]=t},getListener:function(e,n){var t=a[n];return t&&t[e]},deleteListener:function(e,n){var t=a[n];t&&delete t[e]},deleteAllListeners:function(e){for(var n in a)delete a[n][e]},extractEvents:function(e,n,t,i){for(var u,o=r.plugins,s=0,a=o.length;a>s;s++){var l=o[s];if(l){var v=l.extractEvents(e,n,t,i);v&&(u=c(u,v))}}return u},enqueueEvents:function(e){e&&(l=c(l,e))},processEventQueue:function(){var e=l;l=null,o(e,v),"production"!==process.env.NODE_ENV?s(!l,"processEventQueue(): Additional events were enqueued while processing an event queue. Support for this has not yet been implemented."):s(!l)},__purge:function(){a={}},__getListenerBank:function(){return a}};t.exports=p});