define("kg/react/0.0.2/lib/ReactPropTransferer",["./Object.assign","./emptyFunction","./invariant","./joinClasses","./warning"],function(n,r,e){"use strict";function t(n){return function(r,e,t){r[e]=r.hasOwnProperty(e)?n(r[e],t):t}}function o(n,r){for(var e in r)if(r.hasOwnProperty(e)){var t=l[e];t&&l.hasOwnProperty(e)?t(n,e,r[e]):n.hasOwnProperty(e)||(n[e]=r[e])}return n}var s=n("./Object.assign"),a=n("./emptyFunction"),i=n("./invariant"),p=n("./joinClasses"),c=n("./warning"),u=!1,f=t(function(n,r){return s({},r,n)}),l={children:a,className:t(p),style:f},y={TransferStrategies:l,mergeProps:function(n,r){return o(s({},n),r)},Mixin:{transferPropsTo:function(n){return"production"!==process.env.NODE_ENV?i(n._owner===this,"%s: You can't call transferPropsTo() on a component that you don't own, %s. This usually means you are calling transferPropsTo() on a component passed in as props or children.",this.constructor.displayName,"string"==typeof n.type?n.type:n.type.displayName):i(n._owner===this),"production"!==process.env.NODE_ENV&&(u||(u=!0,"production"!==process.env.NODE_ENV?c(!1,"transferPropsTo is deprecated. See http://fb.me/react-transferpropsto for more information."):null)),o(n.props,this.props),n}}};e.exports=y});